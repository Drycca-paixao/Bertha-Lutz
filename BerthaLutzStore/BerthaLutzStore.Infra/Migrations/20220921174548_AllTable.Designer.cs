// <auto-generated />
using System;
using BerthaLutzStore.Infra.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BerthaLutzStore.Infra.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220921174548_AllTable")]
    partial class AllTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.ItemOrder", b =>
                {
                    b.Property<int>("IdItemOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("INT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("IdItemOrder");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProduct");

                    b.ToTable("OrderedItems");
                });

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(24)");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Status")
                        .HasColumnType("VARCHAR(24)");

                    b.Property<decimal>("Total")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("IdOrder");

                    b.HasIndex("IdUser");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("VARCHAR(48)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(248)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(48)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("DATETIME");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<int>("Storage")
                        .HasColumnType("INT");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("VARCHAR(14)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.ItemOrder", b =>
                {
                    b.HasOne("BerthaLutzStore.Core.Entities.Order", "Order")
                        .WithMany("OrderedItems")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BerthaLutzStore.Core.Entities.Product", "Product")
                        .WithMany("OrderedItems")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.Order", b =>
                {
                    b.HasOne("BerthaLutzStore.Core.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.Order", b =>
                {
                    b.Navigation("OrderedItems");
                });

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.Product", b =>
                {
                    b.Navigation("OrderedItems");
                });

            modelBuilder.Entity("BerthaLutzStore.Core.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
